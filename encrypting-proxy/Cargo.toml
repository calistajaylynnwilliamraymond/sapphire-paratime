[package]
name = "sapphire-encrypting-proxy"
version = "0.1.0"
edition = "2021"

[package.metadata.fortanix-sgx]
heap-size = 134217728  # 128 MiB
stack-size = 8388608   # 8 MiB
threads = 16           # must be at least 2 or else ACME verification cannot proceed

[dependencies]
# common
anyhow = "1.0.56"
clap = { version = "3.1.12", default-features = false, features = ["derive", "std"] }
# server
bumpalo = { version = "3.9.1", features = ["allocator_api"] }
hex = { version = "0.4.3", features = ["serde"] }
jsonrpsee-types = "0.10.1"
serde = { version = "1.0.136", features = ["derive"] }
serde_json = { version = "1.0.79", features = ["raw_value"] }
thiserror = "1.0.30"
tiny_http = { version = "0.11.0", features = ["ssl-rustls"] }
tracing = "0.1.32"
tracing-subscriber = { version = "0.3.9", features = ["json"] }
ureq = { version = "2.4.0", features = ["json"] }
url = { version = "2.2.2", features = ["serde"] }
# crypto
deoxysii = "0.2.3"
hmac = "0.12.1"
rand = "0.8.5"
sha2 = "0.10.2"
x25519-dalek = "=1.1.1" # Unpin when zeroize dep floats again (clashes with tiny_http).
# csr
base64 = "0.13.0"
der = "0.6.0-pre.2"
p256 = "0.10.1" # Consider switching to p384 once its arithmetic is fixed (https://github.com/RustCrypto/elliptic-curves/pull/513).
spki = "0.6.0-pre.2"
x509-cert = "0.0.2"

[target.'cfg(not(target_env = "sgx"))'.dependencies]
p256 = { version = "0.10.1", features = ["arithmetic", "pem"] }
clap = { version = "3.1.12", default-features = true, features = ["derive", "cargo"] }

[target.'cfg(target_env = "sgx")'.dependencies]
tracing = { version = "0.1.32", features = ["release_max_level_info"] }
sgx-isa = { git = "https://github.com/fortanix/rust-sgx" } # Use crates.io when >0.3.3

[build-dependencies]
cargo_toml = "0.11.5"
serde = { version = "1.0.136", features = ["derive"] }

[dev-dependencies]
mockall = { version = "0.11.0", features = ["nightly"] }

[target."cfg(fuzzing)".dependencies]
mockall = { version = "0.11.0", features = ["nightly"] }
